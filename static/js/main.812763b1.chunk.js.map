{"version":3,"sources":["models/Car.js","models/POIpoint.js","models/Carpark.js","components/Map.js","components/MapFilters.js","App.js","serviceWorker.js","index.js"],"names":["Car","data","this","discriminator","platesNumber","sideNumber","color","type","picture","id","name","extension","contentType","rangeKm","batteryLevelPct","reservationEnd","reservation","status","locationDescription","address","mapColor","rgb","alpha","promotion","description","location","latitude","longitude","metadata","POIpoint","category","Carpark","spacesCount","availableSpacesCount","pictureId","Map","props","_map","useRef","_markers","_markersPOI","_markersCarpark","useEffect","current","L","map","center","zoom","layers","tileLayer","attribution","layerGroup","addTo","carParkPoints","clearLayers","forEach","el","idx","arr","point","marker","icon","iconUrl","iconSize","popupAnchor","bindPopup","formatPopup","addLayer","POIpoints","getIcon","categoryIcon","fitBounds","carType","statusFolder","iconName","points","car","MapFilters","React","useState","fltBatteryPercentage","setFltBatteryPercentage","fltStatus","setFltStatus","fltCarparks","setFltCarparks","fltPOI","setFltPOI","onChangeFilter","batteryPercentage","poi","carparks","setFltBattery","val","newVal","className","onClick","htmlFor","onChange","e","target","value","checked","handlePoiChange","handleCarparksChange","App","cars","setCars","fCars","setFCars","filter","setFilter","POI","setPOI","fPOI","setFPOI","setCarparks","fCarparks","setFCarparks","console","log","filteredCars","RegExp","test","axios","get","then","objects","mapFilter","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.812763b1.chunk.js","sourcesContent":["class Car {\r\n    constructor(data){\r\n        this.discriminator       = data.discriminator;\r\n        this.platesNumber        = data.platesNumber;        \r\n        this.sideNumber          = data.sideNumber;\r\n        this.color               = data.color;\r\n        this.type                = data.type;\r\n        this.picture             = {\r\n            id          : data.picture.id,\r\n            name        : data.picture.name,\r\n            extension   : data.picture.extension,\r\n            contentType : data.picture.contentType,\r\n        };\r\n        this.rangeKm             = data.rangeKm;\r\n        this.batteryLevelPct     = data.batteryLevelPct;\r\n        this.reservationEnd      = data.reservationEnd;\r\n        this.reservation         = data.reservation;\r\n        this.status              = data.status;\r\n        this.locationDescription = data.locationDescription;\r\n        this.address             = data.address;\r\n        this.mapColor            = {\r\n            rgb   : data.mapColor.rgb,\r\n            alpha : data.mapColor.alpha,\r\n        };\r\n        this.promotion           = data.promotion;\r\n        this.id                  = data.id;\r\n        this.name                = data.name;\r\n        this.description         = data.description;\r\n        this.location            = {\r\n            latitude  : data.location.latitude,\r\n            longitude : data.location.longitude,\r\n        };\r\n        this.metadata            = data.metadata;\r\n    }\r\n}\r\nexport default Car;","class POIpoint {\r\n    constructor(data){\r\n        this.discriminator       = data.discriminator;\r\n        this.id                  = data.id;\r\n        this.name                = data.name;\r\n        this.description         = data.description;\r\n        this.location            = {\r\n            latitude  : data.location.latitude,\r\n            longitude : data.location.longitude,\r\n        };\r\n        this.metadata            = data.metadata;\r\n        \r\n        // this.address             = {\r\n        //     street : data.address.street,\r\n        //     house  : data.address.house,\r\n        //     city   : data.address.city,\r\n        // };\r\n        this.category            = data.category;\r\n        this.picture             = data.picture;\r\n        this.color               = {\r\n            rgb   : data.color.rgb,\r\n            alpha : data.color.alpha,\r\n        };\r\n    }\r\n}\r\nexport default POIpoint;","class Carpark {\r\n    constructor(data){\r\n        this.discriminator         = data.discriminator;\r\n        // this.address             = {\r\n        //     street : data.address.street,\r\n        //     house  : data.address.house,\r\n        //     city   : data.address.city,\r\n        // };\r\n        this.spacesCount          = data.spacesCount;        \r\n        this.availableSpacesCount = data.availableSpacesCount;\r\n        // this.chargers               = data.chargers;\r\n        this.color                = {\r\n            rgb   : data.color.rgb,\r\n            alpha : data.color.alpha,\r\n        };\r\n        this.pictureId            = data.pictureId;\r\n        this.id                   = data.id;\r\n        this.name                 = data.name;\r\n        this.description          = data.description;\r\n        this.location             = {\r\n            latitude  : data.location.latitude,\r\n            longitude : data.location.longitude,\r\n        };\r\n        this.metadata             = data.metadata;\r\n    }\r\n}\r\nexport default Carpark;","import React, { useEffect, useRef } from 'react';\r\nimport L from 'leaflet';\r\nimport Car from '../models/Car';\r\nimport POIpoint from '../models/POIpoint';\r\nimport Carpark from '../models/Carpark';\r\n\r\nconst Map = (props) => {\r\n    const _map = useRef(0);\r\n    const _markers = useRef(0);\r\n    const _markersPOI = useRef(0);\r\n    const _markersCarpark = useRef(0);\r\n    useEffect(() => {\r\n        _map.current = L.map('map', {\r\n            center: [49.8419, 24.0315],\r\n            zoom: 16,\r\n            layers: [\r\n                L.tileLayer('://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n                    attribution:\r\n                    '&copy; <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                }),\r\n            ]\r\n        })\r\n        _markers.current        = L.layerGroup().addTo(_map.current);\r\n        _markersPOI.current     = L.layerGroup().addTo(_map.current);\r\n        _markersCarpark.current = L.layerGroup().addTo(_map.current);\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n        if(props.carParkPoints){\r\n            let getIcon = () => {\r\n                let statusFolder = 'warning';\r\n                let iconName = 'parking-meter-export.png';\r\n                return L.icon({\r\n                    iconUrl: 'icons/map/' + statusFolder + '/' + iconName,\r\n                    iconSize:     [32, 37], \r\n                    popupAnchor:  [0, -16]\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @param {Carpark} point - Carpark Object\r\n             */\r\n            let formatPopup = (point) => {\r\n                return `Nazwa: ${point.name} <br />Miejsc:${point.spacesCount} <br />GPS: [${point.location.latitude}, ${point.location.longitude}]<br />`;\r\n            }\r\n            _markersCarpark.current.clearLayers();\r\n            props.carParkPoints.forEach((el, idx, arr) => {\r\n                const point = new Carpark(el);\r\n                let marker = L.marker([point.location.latitude, point.location.longitude], {icon: getIcon() })\r\n                .bindPopup(formatPopup(point));\r\n                _markersCarpark.current.addLayer(marker);\r\n            })\r\n        } else {\r\n            _markersCarpark.current.clearLayers();\r\n        }\r\n\r\n    },[props.carParkPoints])\r\n\r\n    useEffect(() =>{\r\n        if(props.POIpoints){\r\n            \r\n            let getIcon = (category) => {\r\n                let statusFolder = 'primary';\r\n                let categoryIcon = 'caution.png';\r\n                //parking-meter-export.png\r\n                switch (category) {\r\n                    case 'Stacje kolejowe':\r\n                        categoryIcon = 'train.png';\r\n                        break;\r\n                    case 'Krasnale':\r\n                        categoryIcon = 'flagman.png';\r\n                        break;\r\n                    default:\r\n                        categoryIcon = 'caution.png';\r\n                }            \r\n                return L.icon({\r\n                    iconUrl: 'icons/map/' + statusFolder + '/' + categoryIcon,\r\n                    iconSize:     [32, 37], // size of the icon\r\n                    popupAnchor:  [0, -16] // point from which the popup should open relative to the iconAnchor\r\n                });\r\n            }\r\n\r\n            /**\r\n             * @param {POIpoint} point - Car Object\r\n             */\r\n            let formatPopup = (point) => {\r\n                return `Nazwa: ${point.name} <br />Typ:${point.category} <br />GPS: [${point.location.latitude}, ${point.location.longitude}]<br />`;\r\n            }\r\n            _markersPOI.current.clearLayers();\r\n            props.POIpoints.forEach((el, idx, arr) => {\r\n                const point = new POIpoint(el);\r\n                let marker = L.marker([point.location.latitude, point.location.longitude], {icon: getIcon(point.category) })\r\n                .bindPopup(formatPopup(point));\r\n                _markersPOI.current.addLayer(marker);\r\n            })\r\n        } else {\r\n            _markersPOI.current.clearLayers();\r\n        }\r\n\r\n    },[props.POIpoints])\r\n\r\n    useEffect(() => {\r\n\r\n        // let bounds = [\r\n        //     [52.1857427154, 21.0467766482],\r\n        //     [52.187511, 20.930528],\r\n        //     [52.270895221, 21.0117310234],\r\n        // ];\r\n        let bounds = [\r\n            [51.0662468064, 16.9946984927],\r\n            [51.0874242353, 17.0895922616],\r\n            [51.1548934591, 17.0168069707],\r\n        ];\r\n        _map.current.fitBounds(bounds);\r\n        // _map.current.markerClusterGroup();\r\n\r\n        let getIcon = (status, carType) => {\r\n            let statusFolder = (status === 'AVAILABLE') ? 'success' : 'danger';\r\n            let iconName = (carType === 'TRUCK') ? 'truck3.png' : 'car.png';\r\n            return L.icon({\r\n                iconUrl: 'icons/map/' + statusFolder + '/' + iconName,\r\n                iconSize:     [32, 37], // size of the icon\r\n                popupAnchor:  [0, -16] // point from which the popup should open relative to the iconAnchor\r\n            });\r\n        }\r\n\r\n        /**\r\n         * @param {Car} car - Car Object\r\n         */\r\n        let formatPopup = (car) => {\r\n            return `Typ:${car.type} ${car.platesNumber} <br />Bateria: ${car.batteryLevelPct}<br /> Status: ${car.status} <br />GPS: [${car.location.latitude}, ${car.location.longitude}]<br />`;\r\n        }\r\n        _markers.current.clearLayers();\r\n        props.points.forEach((el, idx, arr) => {\r\n            const car = new Car(el);\r\n            let marker = L.marker([car.location.latitude, car.location.longitude], {icon: getIcon(car.status, car.type) })\r\n            .bindPopup(formatPopup(car));\r\n            _markers.current.addLayer(marker);\r\n        })\r\n\r\n    },[props.points]);\r\n\r\n    // useEffect(() => {\r\n\r\n    //     /**\r\n    //      * @param {Car} car - Car Object\r\n    //      */\r\n    //     // let bounds = props.points.map(function (car) {\r\n    //     //     return [car.location.latitude, car.location.longitude];\r\n    //     // });\r\n    //     let bounds = [\r\n    //         [52.1857427154, 21.0467766482],\r\n    //         [52.187511, 20.930528],\r\n    //         [52.270895221, 21.0117310234],\r\n    //     ];\r\n            \r\n    //     // create map\r\n    //     let carsMap = L.map('map', {\r\n    //         center: [49.8419, 24.0315],\r\n    //         zoom: 16,\r\n    //         layers: [\r\n    //             L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {\r\n    //                 attribution:\r\n    //                 '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n    //             }),\r\n    //         ]\r\n    //     })\r\n    //     carsMap.fitBounds(bounds);\r\n\r\n        \r\n    //     let getIcon = (status, carType) => {\r\n    //         let statusFolder = (status === 'AVAILABLE') ? 'primary' : 'warning';\r\n    //         let iconName = (carType === 'TRUCK') ? 'truck3.png' : 'car.png';\r\n    //         return L.icon({\r\n    //             iconUrl: 'icons/map/' + statusFolder + '/' + iconName,\r\n    //             iconSize:     [32, 37], // size of the icon\r\n    //             popupAnchor:  [0, -16] // point from which the popup should open relative to the iconAnchor\r\n    //         });\r\n    //     }\r\n\r\n    //     /**\r\n    //      * @param {Car} car - Car Object\r\n    //      */\r\n    //     let formatPopup = (car) => {\r\n    //         return `Typ:${car.type} ${car.platesNumber} <br />Bateria: ${car.batteryLevelPct}<br /> Status: ${car.status} <br />GPS: [${car.location.latitude}, ${car.location.longitude}]<br />`;\r\n    //     }\r\n    //     console.log(typeof carsMap);\r\n    //     props.points.forEach((el, idx, arr) => {\r\n    //         const car = new Car(el);\r\n            \r\n    //         L.marker([car.location.latitude, car.location.longitude], {icon: getIcon(car.status, car.type) })\r\n    //          .addTo(carsMap)\r\n    //          .bindPopup(formatPopup(car));\r\n    //     })\r\n        \r\n    // }, [props.points]);\r\n\r\n    return <div id=\"map\"></div>\r\n}\r\n\r\nexport default Map;","import React, { useEffect } from 'react';\r\nconst MapFilters = (props) => {\r\n    const [fltBatteryPercentage, setFltBatteryPercentage] = React.useState(97);\r\n    const [fltStatus, setFltStatus] = React.useState(0);\r\n    const [fltCarparks, setFltCarparks] = React.useState(false);\r\n    const [fltPOI, setFltPOI] = React.useState(false);\r\n    useEffect(() => {\r\n        // console.log(`[CarFlt] Status: ${fltStatus}, Battery: ${fltBatteryPercentage}%`);\r\n        props.onChangeFilter({batteryPercentage: fltBatteryPercentage, status: fltStatus, poi: fltPOI, carparks: fltCarparks})\r\n    }, [fltStatus, fltBatteryPercentage, fltPOI, fltCarparks]);\r\n\r\n    const setFltBattery = (val) => {\r\n        const max = 100, min = 0,\r\n            newVal = fltBatteryPercentage + val;\r\n        if (newVal >= min && newVal <= max) {\r\n            setFltBatteryPercentage(newVal);\r\n        }\r\n    }\r\n\r\n    const handlePoiChange = (e) => {\r\n        setFltPOI(e.target.checked);\r\n    }\r\n\r\n    const handleCarparksChange = (e) => {\r\n        setFltCarparks(e.target.checked);\r\n    }\r\n\r\n    let changeFltStatus = (e) => {\r\n        setFltStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"map-filter\">\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Bateria</span>\r\n                        </div>\r\n                        <div className=\"form-control\">{fltBatteryPercentage}</div>\r\n                        <div className=\"input-group-append\">\r\n                            <span className=\"input-group-text\">%</span>\r\n                            <button className=\"btn btn-outline-secondary\" onClick={() => setFltBattery(+1)} type=\"button\">+</button>\r\n                            <button className=\"btn btn-outline-secondary\" onClick={() => setFltBattery(-1)} type=\"button\">-</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\">Status</label>\r\n                        </div>\r\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" onChange={changeFltStatus} value={fltStatus}>\r\n                            <option value=\"AVAILABLE\">Dostępne</option>\r\n                            <option value=\"UNAVAILABLE\">Niedostepne</option>\r\n                            <option value=\"0\">Wszystkie</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n                <div className=\"form-group\">\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" onChange={e => handlePoiChange(e)} type=\"checkbox\" id=\"poiCheck\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"poiCheck\">\r\n                            Miejsca POI\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"form-check\">\r\n                        <input className=\"form-check-input\" onChange={e => handleCarparksChange(e)} type=\"checkbox\" id=\"carparksCheck\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"carparksCheck\">\r\n                            Parkingi\r\n                        </label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MapFilters;","import React, { useState, useEffect, useRef } from 'react';\nimport axios from \"axios\";\nimport Map from \"./components/Map\";\nimport MapFilters from \"./components/MapFilters\";\n// import MyProvider from \"./components/MyProvider\";\nimport './App.css';\nimport 'leaflet/dist/leaflet.css';\n\nfunction App() {\n  const _POI = useRef(0);\n  const _carparks = useRef(0);\n\n  const [cars, setCars] = useState();\n  const [fCars, setFCars] = useState();\n  const [filter, setFilter] = useState({batteryPercentage: false, status: 0});\n  const [POI, setPOI] = useState();\n  const [fPOI, setFPOI] = useState();\n  const [carparks, setCarparks] = useState();\n  const [fCarparks, setFCarparks] = useState();\n  \n  // useEffect(() => {\n  //   console.log(fCars)\n  //   // setFilteredCars(cars);\n  // }, [fCars]);\n\n  useEffect(() => {\n    // console.log(`[Global] Status: ${filter.status}, Battery: ${filter.batteryPercentage}%`);\n    console.log(filter);\n    let filteredCars = cars;\n\n    // Filter by BATTERY PERCENTAGE\n    if(filter.batteryPercentage !== false && cars){\n      filteredCars = filteredCars.filter(\n        /** @param {Car} car - Car Object */\n        function(car){\n          return car.batteryLevelPct >= filter.batteryPercentage\n      });\n    }\n\n    // Filter by STATUS\n    if(filter.status && filter.status !== '0' && cars){\n      filteredCars = filteredCars.filter(\n        /** @param {Car} car - Car Object */\n        function(car){\n          let PATTERN = new RegExp('^'+filter.status+'$');\n          return PATTERN.test(car.status);\n      });\n    }\n\n    if(!filter.carparks){\n      setFCarparks(false);\n    } else {\n      setFCarparks( carparks );\n    }\n\n    if(!filter.poi){\n      setFPOI(false);\n    } else {\n      setFPOI( POI );\n    }\n    \n    if(filteredCars){\n      setFCars(filteredCars);\n    }\n\n  }, [filter]);\n\n  useEffect(() => {\n    let carsEndpoint = (process.env.NODE_ENV === 'development') ? 'mockup-data/map-cars.json' : 'https://dev.vozilla.pl/api-client-portal/map?objectType=VEHICLE';\n    let carparksEndpoint = (process.env.NODE_ENV === 'development') ? 'mockup-data/map-carparks.json' : 'https://dev.vozilla.pl/api-client-portal/map?objectType=PARKING';\n    let poiEndpoint = (process.env.NODE_ENV === 'development') ? 'mockup-data/map-poi.json' : 'https://dev.vozilla.pl/api-client-portal/map?objectType=POI';\n    axios.get( carsEndpoint ).then(({ data }) => {  setFCars(data.objects); setCars(data.objects); });\n    axios.get( poiEndpoint ).then(({ data }) => {  setFPOI(data.objects); setPOI(data.objects); });\n    axios.get( carparksEndpoint ).then(({ data }) => {  setFCarparks(data.objects); setCarparks(data.objects); });\n  }, []);\n\n  return cars ? (\n    <div className=\"container mt-3\">\n      <MapFilters onChangeFilter={setFilter}/>\n      <Map points={fCars} carParkPoints={fCarparks} POIpoints={fPOI} mapFilter={filter}/>\n    </div>\n  ) : (\n      <div>Loading...</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}